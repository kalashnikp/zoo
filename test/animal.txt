{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import random\n",
    "\n",
    "class Animal():\n",
    "    '''Родительский класс животного / Parent class of the animal'''\n",
    "    age = 1\n",
    "    \n",
    "    def __init__(self, energy, weight, max_age, name):\n",
    "        self.energy = energy\n",
    "        self.weight = weight\n",
    "        self.max_age = max_age\n",
    "        self.name = name\n",
    "        \n",
    "    def is_too_old(self):\n",
    "        '''Проверка текущего возраста с максимальным / Checking the current age with the maximum'''\n",
    "        \n",
    "        if (self.age >= self.max_age) :\n",
    "            return True\n",
    "        else:\n",
    "            return False\n",
    "        \n",
    "    def try_increment_age(self):\n",
    "        '''Рандомное увеличение возраста / Random increase in age'''\n",
    "        \n",
    "        b = random.choice([True, False])\n",
    "\n",
    "        if b == True:\n",
    "            if self.is_too_old() == False or self.weight > 0 or self.energy > 0:\n",
    "                self.age += 1\n",
    "                return self.age\n",
    "        else:\n",
    "           return self.age \n",
    "                \n",
    "    def sleep(self):\n",
    "        '''Функция сна экземпляра / Instance sleep function'''\n",
    "        b = random.choice([True, False])\n",
    "\n",
    "        if b == True:\n",
    "            self.energy += 5\n",
    "            self.try_increment_age()\n",
    "            print(f'{self.name} is sleeping')\n",
    "            return self.energy\n",
    " \n",
    "              \n",
    "    def eat(self):\n",
    "        '''Функция приема пищи экземпляра / Instance eat function'''\n",
    "        b = random.choice([True, False])\n",
    "\n",
    "        if b == True:\n",
    "            self.energy += 3\n",
    "            self.weight += 1\n",
    "            self.try_increment_age()\n",
    "            print(f'{self.name} is eating')    \n",
    "       \n",
    "    def walk(self): \n",
    "        '''Функция приема пищи экземпляра / Instance eat function'''\n",
    "        b = random.choice([True, False])\n",
    "\n",
    "        if b == True:\n",
    "            self.energy -= 5\n",
    "            self.weight -= 1\n",
    "            self.try_increment_age()\n",
    "            print(f'{self.name} is walking')    \n",
    "\n",
    "    "
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
